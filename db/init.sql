/*
CSecBridge Database Initialization Script

This script is executed automatically by the official PostgreSQL Docker image
the first time the container is started. It sets up the necessary roles,
tables, and permissions for the application.

All custom objects should have a "CSB" prefix 
to denote the app name - Cloud-Security-Bridge
*/

-- Set timezone to UTC for consistency across the application
SET TIMEZONE = 'UTC';

-- Main App Role for Managing Application Objects
CREATE ROLE CSB_APP;

-- API-Service User Role; Password to be set later on by admin user.
CREATE ROLE CSB_API_USER;   

/*  
Create default objects.

1. CSB_REQUESTS - Main table for maintaining the current state of a request.
2. CSB_REQUESTS_AUDIT - Audit table for logging all the events.
3. Set owner for the tables
4. Set meta data for tables and columns
5. Create Indices for the tables.
6. Set permissions for API User on the tables for absolute necessary actions.
*/

CREATE TABLE CSB_REQUESTS (
    CSB_CORRELATION_ID UUID PRIMARY KEY,
    CSB_CLIENT_REQ_ID VARCHAR(255) NOT NULL,
    CSB_STATUS VARCHAR(50) NOT NULL,
    CSB_REQ_TIME_STAMP TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    CSB_LAST_UPD_TIME_STAMP TIMESTAMPTZ,
    CSB_CLOUD_PROVIDER VARCHAR(50) NOT NULL,
    CSB_PRINCIPAL VARCHAR(255) NOT NULL,
    CSB_ACTION VARCHAR(50) NOT NULL,
    CSB_ROLE VARCHAR(255) NOT NULL,
    CSB_ACCOUNT_ID VARCHAR(255)
);

CREATE TABLE CSB_REQUESTS_AUDIT (
    CSB_AUDIT_ID BIGSERIAL PRIMARY KEY,
    CSB_CORRELATION_ID UUID NOT NULL REFERENCES CSB_REQUESTS(CSB_CORRELATION_ID) ON DELETE CASCADE,
    CSB_STATUS VARCHAR(50) NOT NULL,
    CSB_AUDIT_TIMESTAMP TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    CSB_ERROR_TEXT TEXT
);

-- Set the owner of the table to the Main App User - CSB_APP
ALTER TABLE CSB_REQUESTS OWNER TO CSB_APP;
ALTER TABLE CSB_REQUESTS_AUDIT OWNER TO CSB_APP;

-- Set the column meta data
COMMENT ON COLUMN CSB_REQUESTS.CSB_CORRELATION_ID IS 'Unique ID generated by the API service for internal tracking.';
COMMENT ON COLUMN CSB_REQUESTS.CSB_STATUS IS 'The current status of the request (e.g., PENDING, SUCCESS, FAILED).';
COMMENT ON TABLE CSB_REQUESTS_AUDIT IS 'An append-only log of all status changes for each request.';

-- Create indices
CREATE INDEX CSB_REQUESTS_CLIENT_REQUEST_ID_IDX ON CSB_REQUESTS(CSB_CLIENT_REQUEST_ID);
CREATE INDEX CSB_REQUESTS_STATUS_IDX ON CSB_REQUESTS(CSB_STATUS);
CREATE INDEX CSB_REQUESTS_PRINCIPAL_IDX ON CSB_REQUESTS(CSB_PRINCIPAL);
CREATE INDEX CSB_REQUESTS_AUDIT_CORRELATION_ID_IDX ON CSB_REQUESTS_AUDIT(CSB_CORRELATION_ID);

-- Set basic permissions
GRANT CONNECT ON DATABASE CSECBRIDGE_DB TO CSB_API_USER;
GRANT USAGE ON SCHEMA PUBLIC TO CSB_API_USER;
GRANT SELECT, INSERT, UPDATE ON TABLE CSB_REQUESTS TO CSB_API_USER;
GRANT SELECT, INSERT ON TABLE CSB_REQUESTS_AUDIT TO CSB_API_USER;

-- The audit_id is auto-generating, so the user needs usage permission on the sequence.
GRANT USAGE, SELECT ON SEQUENCE CSB_REQUESTS_AUDIT_CSB_AUDIT_ID_SEQ TO CSB_API_USER;

-- Explicitly REVOKE all other permissions to enforce least privilege.
REVOKE TRUNCATE, DELETE, REFERENCES, TRIGGER ON ALL TABLES IN SCHEMA PUBLIC FROM CSB_API_USER;

-- Log a message to the console upon successful completion
\echo 'CSecBridge database initialized successfully with roles, tables, and permissions.'