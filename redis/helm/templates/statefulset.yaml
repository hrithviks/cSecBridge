# --------------------------------------------
# Statefulset Template for the Redis Service
#
# - Creates the core POD
# - Attaches the persistent volume for AOF
# --------------------------------------------

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}

# Statefulset Spec
spec:
  replicas: {{ .Values.statefulset.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}

  # The serviceName is crucial for a StatefulSet to provide a stable DNS entry for each pod.
  serviceName: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    
    # POD Spec
    spec:

      # Service Account Details for the POD
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}

      # Use the docker-registry secret
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}

      # Container configuration for the POD
      containers:
        - name: redis
          image: {{ .Values.statefulset.image.uri }}
          imagePullPolicy: {{ .Values.statefulset.image.pullPolicy }}
          
          # The CMD points to our custom config file which enforces password and AOF.
          command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
            
          ports:
            - name: redis
              containerPort: {{ .Values.service.port }}
              protocol: TCP
              
          # Readiness and Liveness Probes
          readinessProbe:
            exec:
              command: ["sh", "-c", "redis-cli -a $REDIS_PASSWORD ping"]
            initialDelaySeconds: {{ .Values.statefulset.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.statefulset.probes.readiness.periodSeconds }}
          livenessProbe:
            exec:
              command: ["sh", "-c", "redis-cli -a $REDIS_PASSWORD ping"]
            initialDelaySeconds: {{ .Values.statefulset.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.statefulset.probes.liveness.periodSeconds }}
            
          resources:
            {{- toYaml .Values.statefulset.resources | nindent 12 }}
            
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: {{ .Values.secrets.key }}
          
          volumeMounts:
            # Persistent storage for AOF file
            - name: redis-data
              mountPath: /data
            # Mount custom redis.conf file only, into the default config path
            - name: redis-config
              mountPath: /usr/local/etc/redis/redis.conf
              subPath: redis.conf
              readOnly: true
      
      # Define the volume for the custom configuration file (ConfigMap).
      volumes:
        - name: redis-config
          configMap:
            name: {{ .Chart.Name }}-config

  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
      storageClassName: {{ .Values.persistence.storageClassName }}
  {{- end }}
